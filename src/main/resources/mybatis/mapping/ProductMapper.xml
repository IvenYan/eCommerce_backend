<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.management.backend.api.mybatis.mapper.ProductMapper">
  <resultMap id="BaseResultMap" type="com.management.backend.api.mybatis.model.Product">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 24 21:47:09 CST 2019.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="audit_status" jdbcType="TINYINT" property="auditStatus" />
    <result column="onsale" jdbcType="TINYINT" property="onsale" />
    <result column="level" jdbcType="TINYINT" property="level" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="brand" jdbcType="VARCHAR" property="brand" />
    <result column="factory_name" jdbcType="VARCHAR" property="factoryName" />
    <result column="source_area" jdbcType="VARCHAR" property="sourceArea" />
    <result column="factory_number" jdbcType="VARCHAR" property="factoryNumber" />
    <result column="factory_catalog" jdbcType="VARCHAR" property="factoryCatalog" />
    <result column="upload_forbiden" jdbcType="TINYINT" property="uploadForbiden" />
    <result column="source_url" jdbcType="VARCHAR" property="sourceUrl" />
    <result column="comments" jdbcType="VARCHAR" property="comments" />
    <result column="cost" jdbcType="REAL" property="cost" />
    <result column="shipping_cost" jdbcType="REAL" property="shippingCost" />
    <result column="custom_code" jdbcType="VARCHAR" property="customCode" />
    <result column="eng_desc" jdbcType="VARCHAR" property="engDesc" />
    <result column="declare_price" jdbcType="VARCHAR" property="declarePrice" />
    <result column="ch_desc" jdbcType="VARCHAR" property="chDesc" />
    <result column="inner_sku" jdbcType="VARCHAR" property="innerSku" />
    <result column="suit_for_group" jdbcType="TINYINT" property="suitForGroup" />
    <result column="product_material" jdbcType="VARCHAR" property="productMaterial" />
    <result column="packet_material" jdbcType="VARCHAR" property="packetMaterial" />
    <result column="metal_type" jdbcType="VARCHAR" property="metalType" />
    <result column="jewel_type" jdbcType="VARCHAR" property="jewelType" />
    <result column="package_gross_weight" jdbcType="VARCHAR" property="packageGrossWeight" />
    <result column="has_battery" jdbcType="TINYINT" property="hasBattery" />
    <result column="package_long" jdbcType="REAL" property="packageLong" />
    <result column="package_width" jdbcType="REAL" property="packageWidth" />
    <result column="package_hight" jdbcType="REAL" property="packageHight" />
    <result column="in_store" jdbcType="BIGINT" property="inStore" />
    <result column="count_per_package" jdbcType="BIGINT" property="countPerPackage" />
    <result column="product_type_id" jdbcType="INTEGER" property="productTypeId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.management.backend.api.mybatis.model.ProductWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 24 21:47:09 CST 2019.
    -->
    <result column="englishProductTile" jdbcType="LONGVARBINARY" property="englishproducttile" />
    <result column="englishProductKeyWords" jdbcType="LONGVARBINARY" property="englishproductkeywords" />
    <result column="englishProductKeyDesc" jdbcType="LONGVARBINARY" property="englishproductkeydesc" />
    <result column="englishProductDesc" jdbcType="LONGVARBINARY" property="englishproductdesc" />
    <result column="frenchProductTile" jdbcType="LONGVARBINARY" property="frenchproducttile" />
    <result column="frenchProductKeyWords" jdbcType="LONGVARBINARY" property="frenchproductkeywords" />
    <result column="frenchProductKeyDesc" jdbcType="LONGVARBINARY" property="frenchproductkeydesc" />
    <result column="frenchProductDesc" jdbcType="LONGVARBINARY" property="frenchproductdesc" />
    <result column="germanProductTile" jdbcType="LONGVARBINARY" property="germanproducttile" />
    <result column="germanProductKeyWords" jdbcType="LONGVARBINARY" property="germanproductkeywords" />
    <result column="germanProductKeyDesc" jdbcType="LONGVARBINARY" property="germanproductkeydesc" />
    <result column="germanProductDesc" jdbcType="LONGVARBINARY" property="germanproductdesc" />
    <result column="italyProductTile" jdbcType="LONGVARBINARY" property="italyproducttile" />
    <result column="italyProductKeyWords" jdbcType="LONGVARBINARY" property="italyproductkeywords" />
    <result column="italyProductKeyDesc" jdbcType="LONGVARBINARY" property="italyproductkeydesc" />
    <result column="italyProductDesc" jdbcType="LONGVARBINARY" property="italyproductdesc" />
    <result column="spanishProductTile" jdbcType="LONGVARBINARY" property="spanishproducttile" />
    <result column="spanishProductKeyWords" jdbcType="LONGVARBINARY" property="spanishproductkeywords" />
    <result column="spanishProductKeyDesc" jdbcType="LONGVARBINARY" property="spanishproductkeydesc" />
    <result column="spanishProductDesc" jdbcType="LONGVARBINARY" property="spanishproductdesc" />
    <result column="japaneseProductTile" jdbcType="LONGVARBINARY" property="japaneseproducttile" />
    <result column="japaneseProductKeyWords" jdbcType="LONGVARBINARY" property="japaneseproductkeywords" />
    <result column="japaneseProductKeyDesc" jdbcType="LONGVARBINARY" property="japaneseproductkeydesc" />
    <result column="japaneseProductDesc" jdbcType="LONGVARBINARY" property="japaneseproductdesc" />
    <result column="russianProductTile" jdbcType="LONGVARBINARY" property="russianproducttile" />
    <result column="russianProductKeyWords" jdbcType="LONGVARBINARY" property="russianproductkeywords" />
    <result column="russianProductKeyDesc" jdbcType="LONGVARBINARY" property="russianproductkeydesc" />
    <result column="russianProductDesc" jdbcType="LONGVARBINARY" property="russianproductdesc" />
    <result column="chineseProductTile" jdbcType="LONGVARBINARY" property="chineseproducttile" />
    <result column="chineseProductKeyWords" jdbcType="LONGVARBINARY" property="chineseproductkeywords" />
    <result column="chineseProductKeyDesc" jdbcType="LONGVARBINARY" property="chineseproductkeydesc" />
    <result column="chineseProductDesc" jdbcType="LONGVARBINARY" property="chineseproductdesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 24 21:47:09 CST 2019.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 24 21:47:09 CST 2019.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 24 21:47:09 CST 2019.
    -->
    id, creat_time, audit_status, onsale, level, user_id, brand, factory_name, source_area, 
    factory_number, factory_catalog, upload_forbiden, source_url, comments, cost, shipping_cost, 
    custom_code, eng_desc, declare_price, ch_desc, inner_sku, suit_for_group, product_material, 
    packet_material, metal_type, jewel_type, package_gross_weight, has_battery, package_long, 
    package_width, package_hight, in_store, count_per_package, product_type_id
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 24 21:47:09 CST 2019.
    -->
    englishProductTile, englishProductKeyWords, englishProductKeyDesc, englishProductDesc, 
    frenchProductTile, frenchProductKeyWords, frenchProductKeyDesc, frenchProductDesc, 
    germanProductTile, germanProductKeyWords, germanProductKeyDesc, germanProductDesc, 
    italyProductTile, italyProductKeyWords, italyProductKeyDesc, italyProductDesc, spanishProductTile, 
    spanishProductKeyWords, spanishProductKeyDesc, spanishProductDesc, japaneseProductTile, 
    japaneseProductKeyWords, japaneseProductKeyDesc, japaneseProductDesc, russianProductTile, 
    russianProductKeyWords, russianProductKeyDesc, russianProductDesc, chineseProductTile, 
    chineseProductKeyWords, chineseProductKeyDesc, chineseProductDesc
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.management.backend.api.mybatis.model.ProductExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 24 21:47:09 CST 2019.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.management.backend.api.mybatis.model.ProductExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 24 21:47:09 CST 2019.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 24 21:47:09 CST 2019.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 24 21:47:09 CST 2019.
    -->
    delete from product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.management.backend.api.mybatis.model.ProductExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 24 21:47:09 CST 2019.
    -->
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.management.backend.api.mybatis.model.ProductWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 24 21:47:09 CST 2019.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product (creat_time, audit_status, onsale, 
      level, user_id, brand, 
      factory_name, source_area, factory_number, 
      factory_catalog, upload_forbiden, source_url, 
      comments, cost, shipping_cost, 
      custom_code, eng_desc, declare_price, 
      ch_desc, inner_sku, suit_for_group, 
      product_material, packet_material, metal_type, 
      jewel_type, package_gross_weight, has_battery, 
      package_long, package_width, package_hight, 
      in_store, count_per_package, product_type_id, 
      englishProductTile, englishProductKeyWords, 
      englishProductKeyDesc, englishProductDesc, 
      frenchProductTile, frenchProductKeyWords, 
      frenchProductKeyDesc, frenchProductDesc, 
      germanProductTile, germanProductKeyWords, 
      germanProductKeyDesc, germanProductDesc, 
      italyProductTile, italyProductKeyWords, 
      italyProductKeyDesc, italyProductDesc, 
      spanishProductTile, spanishProductKeyWords, 
      spanishProductKeyDesc, spanishProductDesc, 
      japaneseProductTile, japaneseProductKeyWords, 
      japaneseProductKeyDesc, japaneseProductDesc, 
      russianProductTile, russianProductKeyWords, 
      russianProductKeyDesc, russianProductDesc, 
      chineseProductTile, chineseProductKeyWords, 
      chineseProductKeyDesc, chineseProductDesc
      )
    values (#{creatTime,jdbcType=TIMESTAMP}, #{auditStatus,jdbcType=TINYINT}, #{onsale,jdbcType=TINYINT}, 
      #{level,jdbcType=TINYINT}, #{userId,jdbcType=INTEGER}, #{brand,jdbcType=VARCHAR}, 
      #{factoryName,jdbcType=VARCHAR}, #{sourceArea,jdbcType=VARCHAR}, #{factoryNumber,jdbcType=VARCHAR}, 
      #{factoryCatalog,jdbcType=VARCHAR}, #{uploadForbiden,jdbcType=TINYINT}, #{sourceUrl,jdbcType=VARCHAR}, 
      #{comments,jdbcType=VARCHAR}, #{cost,jdbcType=REAL}, #{shippingCost,jdbcType=REAL}, 
      #{customCode,jdbcType=VARCHAR}, #{engDesc,jdbcType=VARCHAR}, #{declarePrice,jdbcType=VARCHAR}, 
      #{chDesc,jdbcType=VARCHAR}, #{innerSku,jdbcType=VARCHAR}, #{suitForGroup,jdbcType=TINYINT}, 
      #{productMaterial,jdbcType=VARCHAR}, #{packetMaterial,jdbcType=VARCHAR}, #{metalType,jdbcType=VARCHAR}, 
      #{jewelType,jdbcType=VARCHAR}, #{packageGrossWeight,jdbcType=VARCHAR}, #{hasBattery,jdbcType=TINYINT}, 
      #{packageLong,jdbcType=REAL}, #{packageWidth,jdbcType=REAL}, #{packageHight,jdbcType=REAL}, 
      #{inStore,jdbcType=BIGINT}, #{countPerPackage,jdbcType=BIGINT}, #{productTypeId,jdbcType=INTEGER}, 
      #{englishproducttile,jdbcType=LONGVARBINARY}, #{englishproductkeywords,jdbcType=LONGVARBINARY}, 
      #{englishproductkeydesc,jdbcType=LONGVARBINARY}, #{englishproductdesc,jdbcType=LONGVARBINARY}, 
      #{frenchproducttile,jdbcType=LONGVARBINARY}, #{frenchproductkeywords,jdbcType=LONGVARBINARY}, 
      #{frenchproductkeydesc,jdbcType=LONGVARBINARY}, #{frenchproductdesc,jdbcType=LONGVARBINARY}, 
      #{germanproducttile,jdbcType=LONGVARBINARY}, #{germanproductkeywords,jdbcType=LONGVARBINARY}, 
      #{germanproductkeydesc,jdbcType=LONGVARBINARY}, #{germanproductdesc,jdbcType=LONGVARBINARY}, 
      #{italyproducttile,jdbcType=LONGVARBINARY}, #{italyproductkeywords,jdbcType=LONGVARBINARY}, 
      #{italyproductkeydesc,jdbcType=LONGVARBINARY}, #{italyproductdesc,jdbcType=LONGVARBINARY}, 
      #{spanishproducttile,jdbcType=LONGVARBINARY}, #{spanishproductkeywords,jdbcType=LONGVARBINARY}, 
      #{spanishproductkeydesc,jdbcType=LONGVARBINARY}, #{spanishproductdesc,jdbcType=LONGVARBINARY}, 
      #{japaneseproducttile,jdbcType=LONGVARBINARY}, #{japaneseproductkeywords,jdbcType=LONGVARBINARY}, 
      #{japaneseproductkeydesc,jdbcType=LONGVARBINARY}, #{japaneseproductdesc,jdbcType=LONGVARBINARY}, 
      #{russianproducttile,jdbcType=LONGVARBINARY}, #{russianproductkeywords,jdbcType=LONGVARBINARY}, 
      #{russianproductkeydesc,jdbcType=LONGVARBINARY}, #{russianproductdesc,jdbcType=LONGVARBINARY}, 
      #{chineseproducttile,jdbcType=LONGVARBINARY}, #{chineseproductkeywords,jdbcType=LONGVARBINARY}, 
      #{chineseproductkeydesc,jdbcType=LONGVARBINARY}, #{chineseproductdesc,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.management.backend.api.mybatis.model.ProductWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 24 21:47:09 CST 2019.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="creatTime != null">
        creat_time,
      </if>
      <if test="auditStatus != null">
        audit_status,
      </if>
      <if test="onsale != null">
        onsale,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="brand != null">
        brand,
      </if>
      <if test="factoryName != null">
        factory_name,
      </if>
      <if test="sourceArea != null">
        source_area,
      </if>
      <if test="factoryNumber != null">
        factory_number,
      </if>
      <if test="factoryCatalog != null">
        factory_catalog,
      </if>
      <if test="uploadForbiden != null">
        upload_forbiden,
      </if>
      <if test="sourceUrl != null">
        source_url,
      </if>
      <if test="comments != null">
        comments,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="shippingCost != null">
        shipping_cost,
      </if>
      <if test="customCode != null">
        custom_code,
      </if>
      <if test="engDesc != null">
        eng_desc,
      </if>
      <if test="declarePrice != null">
        declare_price,
      </if>
      <if test="chDesc != null">
        ch_desc,
      </if>
      <if test="innerSku != null">
        inner_sku,
      </if>
      <if test="suitForGroup != null">
        suit_for_group,
      </if>
      <if test="productMaterial != null">
        product_material,
      </if>
      <if test="packetMaterial != null">
        packet_material,
      </if>
      <if test="metalType != null">
        metal_type,
      </if>
      <if test="jewelType != null">
        jewel_type,
      </if>
      <if test="packageGrossWeight != null">
        package_gross_weight,
      </if>
      <if test="hasBattery != null">
        has_battery,
      </if>
      <if test="packageLong != null">
        package_long,
      </if>
      <if test="packageWidth != null">
        package_width,
      </if>
      <if test="packageHight != null">
        package_hight,
      </if>
      <if test="inStore != null">
        in_store,
      </if>
      <if test="countPerPackage != null">
        count_per_package,
      </if>
      <if test="productTypeId != null">
        product_type_id,
      </if>
      <if test="englishproducttile != null">
        englishProductTile,
      </if>
      <if test="englishproductkeywords != null">
        englishProductKeyWords,
      </if>
      <if test="englishproductkeydesc != null">
        englishProductKeyDesc,
      </if>
      <if test="englishproductdesc != null">
        englishProductDesc,
      </if>
      <if test="frenchproducttile != null">
        frenchProductTile,
      </if>
      <if test="frenchproductkeywords != null">
        frenchProductKeyWords,
      </if>
      <if test="frenchproductkeydesc != null">
        frenchProductKeyDesc,
      </if>
      <if test="frenchproductdesc != null">
        frenchProductDesc,
      </if>
      <if test="germanproducttile != null">
        germanProductTile,
      </if>
      <if test="germanproductkeywords != null">
        germanProductKeyWords,
      </if>
      <if test="germanproductkeydesc != null">
        germanProductKeyDesc,
      </if>
      <if test="germanproductdesc != null">
        germanProductDesc,
      </if>
      <if test="italyproducttile != null">
        italyProductTile,
      </if>
      <if test="italyproductkeywords != null">
        italyProductKeyWords,
      </if>
      <if test="italyproductkeydesc != null">
        italyProductKeyDesc,
      </if>
      <if test="italyproductdesc != null">
        italyProductDesc,
      </if>
      <if test="spanishproducttile != null">
        spanishProductTile,
      </if>
      <if test="spanishproductkeywords != null">
        spanishProductKeyWords,
      </if>
      <if test="spanishproductkeydesc != null">
        spanishProductKeyDesc,
      </if>
      <if test="spanishproductdesc != null">
        spanishProductDesc,
      </if>
      <if test="japaneseproducttile != null">
        japaneseProductTile,
      </if>
      <if test="japaneseproductkeywords != null">
        japaneseProductKeyWords,
      </if>
      <if test="japaneseproductkeydesc != null">
        japaneseProductKeyDesc,
      </if>
      <if test="japaneseproductdesc != null">
        japaneseProductDesc,
      </if>
      <if test="russianproducttile != null">
        russianProductTile,
      </if>
      <if test="russianproductkeywords != null">
        russianProductKeyWords,
      </if>
      <if test="russianproductkeydesc != null">
        russianProductKeyDesc,
      </if>
      <if test="russianproductdesc != null">
        russianProductDesc,
      </if>
      <if test="chineseproducttile != null">
        chineseProductTile,
      </if>
      <if test="chineseproductkeywords != null">
        chineseProductKeyWords,
      </if>
      <if test="chineseproductkeydesc != null">
        chineseProductKeyDesc,
      </if>
      <if test="chineseproductdesc != null">
        chineseProductDesc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="creatTime != null">
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditStatus != null">
        #{auditStatus,jdbcType=TINYINT},
      </if>
      <if test="onsale != null">
        #{onsale,jdbcType=TINYINT},
      </if>
      <if test="level != null">
        #{level,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="brand != null">
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="factoryName != null">
        #{factoryName,jdbcType=VARCHAR},
      </if>
      <if test="sourceArea != null">
        #{sourceArea,jdbcType=VARCHAR},
      </if>
      <if test="factoryNumber != null">
        #{factoryNumber,jdbcType=VARCHAR},
      </if>
      <if test="factoryCatalog != null">
        #{factoryCatalog,jdbcType=VARCHAR},
      </if>
      <if test="uploadForbiden != null">
        #{uploadForbiden,jdbcType=TINYINT},
      </if>
      <if test="sourceUrl != null">
        #{sourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="comments != null">
        #{comments,jdbcType=VARCHAR},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=REAL},
      </if>
      <if test="shippingCost != null">
        #{shippingCost,jdbcType=REAL},
      </if>
      <if test="customCode != null">
        #{customCode,jdbcType=VARCHAR},
      </if>
      <if test="engDesc != null">
        #{engDesc,jdbcType=VARCHAR},
      </if>
      <if test="declarePrice != null">
        #{declarePrice,jdbcType=VARCHAR},
      </if>
      <if test="chDesc != null">
        #{chDesc,jdbcType=VARCHAR},
      </if>
      <if test="innerSku != null">
        #{innerSku,jdbcType=VARCHAR},
      </if>
      <if test="suitForGroup != null">
        #{suitForGroup,jdbcType=TINYINT},
      </if>
      <if test="productMaterial != null">
        #{productMaterial,jdbcType=VARCHAR},
      </if>
      <if test="packetMaterial != null">
        #{packetMaterial,jdbcType=VARCHAR},
      </if>
      <if test="metalType != null">
        #{metalType,jdbcType=VARCHAR},
      </if>
      <if test="jewelType != null">
        #{jewelType,jdbcType=VARCHAR},
      </if>
      <if test="packageGrossWeight != null">
        #{packageGrossWeight,jdbcType=VARCHAR},
      </if>
      <if test="hasBattery != null">
        #{hasBattery,jdbcType=TINYINT},
      </if>
      <if test="packageLong != null">
        #{packageLong,jdbcType=REAL},
      </if>
      <if test="packageWidth != null">
        #{packageWidth,jdbcType=REAL},
      </if>
      <if test="packageHight != null">
        #{packageHight,jdbcType=REAL},
      </if>
      <if test="inStore != null">
        #{inStore,jdbcType=BIGINT},
      </if>
      <if test="countPerPackage != null">
        #{countPerPackage,jdbcType=BIGINT},
      </if>
      <if test="productTypeId != null">
        #{productTypeId,jdbcType=INTEGER},
      </if>
      <if test="englishproducttile != null">
        #{englishproducttile,jdbcType=LONGVARBINARY},
      </if>
      <if test="englishproductkeywords != null">
        #{englishproductkeywords,jdbcType=LONGVARBINARY},
      </if>
      <if test="englishproductkeydesc != null">
        #{englishproductkeydesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="englishproductdesc != null">
        #{englishproductdesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="frenchproducttile != null">
        #{frenchproducttile,jdbcType=LONGVARBINARY},
      </if>
      <if test="frenchproductkeywords != null">
        #{frenchproductkeywords,jdbcType=LONGVARBINARY},
      </if>
      <if test="frenchproductkeydesc != null">
        #{frenchproductkeydesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="frenchproductdesc != null">
        #{frenchproductdesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="germanproducttile != null">
        #{germanproducttile,jdbcType=LONGVARBINARY},
      </if>
      <if test="germanproductkeywords != null">
        #{germanproductkeywords,jdbcType=LONGVARBINARY},
      </if>
      <if test="germanproductkeydesc != null">
        #{germanproductkeydesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="germanproductdesc != null">
        #{germanproductdesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="italyproducttile != null">
        #{italyproducttile,jdbcType=LONGVARBINARY},
      </if>
      <if test="italyproductkeywords != null">
        #{italyproductkeywords,jdbcType=LONGVARBINARY},
      </if>
      <if test="italyproductkeydesc != null">
        #{italyproductkeydesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="italyproductdesc != null">
        #{italyproductdesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="spanishproducttile != null">
        #{spanishproducttile,jdbcType=LONGVARBINARY},
      </if>
      <if test="spanishproductkeywords != null">
        #{spanishproductkeywords,jdbcType=LONGVARBINARY},
      </if>
      <if test="spanishproductkeydesc != null">
        #{spanishproductkeydesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="spanishproductdesc != null">
        #{spanishproductdesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="japaneseproducttile != null">
        #{japaneseproducttile,jdbcType=LONGVARBINARY},
      </if>
      <if test="japaneseproductkeywords != null">
        #{japaneseproductkeywords,jdbcType=LONGVARBINARY},
      </if>
      <if test="japaneseproductkeydesc != null">
        #{japaneseproductkeydesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="japaneseproductdesc != null">
        #{japaneseproductdesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="russianproducttile != null">
        #{russianproducttile,jdbcType=LONGVARBINARY},
      </if>
      <if test="russianproductkeywords != null">
        #{russianproductkeywords,jdbcType=LONGVARBINARY},
      </if>
      <if test="russianproductkeydesc != null">
        #{russianproductkeydesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="russianproductdesc != null">
        #{russianproductdesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="chineseproducttile != null">
        #{chineseproducttile,jdbcType=LONGVARBINARY},
      </if>
      <if test="chineseproductkeywords != null">
        #{chineseproductkeywords,jdbcType=LONGVARBINARY},
      </if>
      <if test="chineseproductkeydesc != null">
        #{chineseproductkeydesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="chineseproductdesc != null">
        #{chineseproductdesc,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.management.backend.api.mybatis.model.ProductExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 24 21:47:09 CST 2019.
    -->
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 24 21:47:09 CST 2019.
    -->
    update product
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.creatTime != null">
        creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.auditStatus != null">
        audit_status = #{record.auditStatus,jdbcType=TINYINT},
      </if>
      <if test="record.onsale != null">
        onsale = #{record.onsale,jdbcType=TINYINT},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=TINYINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.brand != null">
        brand = #{record.brand,jdbcType=VARCHAR},
      </if>
      <if test="record.factoryName != null">
        factory_name = #{record.factoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceArea != null">
        source_area = #{record.sourceArea,jdbcType=VARCHAR},
      </if>
      <if test="record.factoryNumber != null">
        factory_number = #{record.factoryNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.factoryCatalog != null">
        factory_catalog = #{record.factoryCatalog,jdbcType=VARCHAR},
      </if>
      <if test="record.uploadForbiden != null">
        upload_forbiden = #{record.uploadForbiden,jdbcType=TINYINT},
      </if>
      <if test="record.sourceUrl != null">
        source_url = #{record.sourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.comments != null">
        comments = #{record.comments,jdbcType=VARCHAR},
      </if>
      <if test="record.cost != null">
        cost = #{record.cost,jdbcType=REAL},
      </if>
      <if test="record.shippingCost != null">
        shipping_cost = #{record.shippingCost,jdbcType=REAL},
      </if>
      <if test="record.customCode != null">
        custom_code = #{record.customCode,jdbcType=VARCHAR},
      </if>
      <if test="record.engDesc != null">
        eng_desc = #{record.engDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.declarePrice != null">
        declare_price = #{record.declarePrice,jdbcType=VARCHAR},
      </if>
      <if test="record.chDesc != null">
        ch_desc = #{record.chDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.innerSku != null">
        inner_sku = #{record.innerSku,jdbcType=VARCHAR},
      </if>
      <if test="record.suitForGroup != null">
        suit_for_group = #{record.suitForGroup,jdbcType=TINYINT},
      </if>
      <if test="record.productMaterial != null">
        product_material = #{record.productMaterial,jdbcType=VARCHAR},
      </if>
      <if test="record.packetMaterial != null">
        packet_material = #{record.packetMaterial,jdbcType=VARCHAR},
      </if>
      <if test="record.metalType != null">
        metal_type = #{record.metalType,jdbcType=VARCHAR},
      </if>
      <if test="record.jewelType != null">
        jewel_type = #{record.jewelType,jdbcType=VARCHAR},
      </if>
      <if test="record.packageGrossWeight != null">
        package_gross_weight = #{record.packageGrossWeight,jdbcType=VARCHAR},
      </if>
      <if test="record.hasBattery != null">
        has_battery = #{record.hasBattery,jdbcType=TINYINT},
      </if>
      <if test="record.packageLong != null">
        package_long = #{record.packageLong,jdbcType=REAL},
      </if>
      <if test="record.packageWidth != null">
        package_width = #{record.packageWidth,jdbcType=REAL},
      </if>
      <if test="record.packageHight != null">
        package_hight = #{record.packageHight,jdbcType=REAL},
      </if>
      <if test="record.inStore != null">
        in_store = #{record.inStore,jdbcType=BIGINT},
      </if>
      <if test="record.countPerPackage != null">
        count_per_package = #{record.countPerPackage,jdbcType=BIGINT},
      </if>
      <if test="record.productTypeId != null">
        product_type_id = #{record.productTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.englishproducttile != null">
        englishProductTile = #{record.englishproducttile,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.englishproductkeywords != null">
        englishProductKeyWords = #{record.englishproductkeywords,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.englishproductkeydesc != null">
        englishProductKeyDesc = #{record.englishproductkeydesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.englishproductdesc != null">
        englishProductDesc = #{record.englishproductdesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.frenchproducttile != null">
        frenchProductTile = #{record.frenchproducttile,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.frenchproductkeywords != null">
        frenchProductKeyWords = #{record.frenchproductkeywords,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.frenchproductkeydesc != null">
        frenchProductKeyDesc = #{record.frenchproductkeydesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.frenchproductdesc != null">
        frenchProductDesc = #{record.frenchproductdesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.germanproducttile != null">
        germanProductTile = #{record.germanproducttile,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.germanproductkeywords != null">
        germanProductKeyWords = #{record.germanproductkeywords,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.germanproductkeydesc != null">
        germanProductKeyDesc = #{record.germanproductkeydesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.germanproductdesc != null">
        germanProductDesc = #{record.germanproductdesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.italyproducttile != null">
        italyProductTile = #{record.italyproducttile,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.italyproductkeywords != null">
        italyProductKeyWords = #{record.italyproductkeywords,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.italyproductkeydesc != null">
        italyProductKeyDesc = #{record.italyproductkeydesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.italyproductdesc != null">
        italyProductDesc = #{record.italyproductdesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.spanishproducttile != null">
        spanishProductTile = #{record.spanishproducttile,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.spanishproductkeywords != null">
        spanishProductKeyWords = #{record.spanishproductkeywords,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.spanishproductkeydesc != null">
        spanishProductKeyDesc = #{record.spanishproductkeydesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.spanishproductdesc != null">
        spanishProductDesc = #{record.spanishproductdesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.japaneseproducttile != null">
        japaneseProductTile = #{record.japaneseproducttile,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.japaneseproductkeywords != null">
        japaneseProductKeyWords = #{record.japaneseproductkeywords,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.japaneseproductkeydesc != null">
        japaneseProductKeyDesc = #{record.japaneseproductkeydesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.japaneseproductdesc != null">
        japaneseProductDesc = #{record.japaneseproductdesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.russianproducttile != null">
        russianProductTile = #{record.russianproducttile,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.russianproductkeywords != null">
        russianProductKeyWords = #{record.russianproductkeywords,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.russianproductkeydesc != null">
        russianProductKeyDesc = #{record.russianproductkeydesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.russianproductdesc != null">
        russianProductDesc = #{record.russianproductdesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.chineseproducttile != null">
        chineseProductTile = #{record.chineseproducttile,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.chineseproductkeywords != null">
        chineseProductKeyWords = #{record.chineseproductkeywords,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.chineseproductkeydesc != null">
        chineseProductKeyDesc = #{record.chineseproductkeydesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.chineseproductdesc != null">
        chineseProductDesc = #{record.chineseproductdesc,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 24 21:47:09 CST 2019.
    -->
    update product
    set id = #{record.id,jdbcType=INTEGER},
      creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      audit_status = #{record.auditStatus,jdbcType=TINYINT},
      onsale = #{record.onsale,jdbcType=TINYINT},
      level = #{record.level,jdbcType=TINYINT},
      user_id = #{record.userId,jdbcType=INTEGER},
      brand = #{record.brand,jdbcType=VARCHAR},
      factory_name = #{record.factoryName,jdbcType=VARCHAR},
      source_area = #{record.sourceArea,jdbcType=VARCHAR},
      factory_number = #{record.factoryNumber,jdbcType=VARCHAR},
      factory_catalog = #{record.factoryCatalog,jdbcType=VARCHAR},
      upload_forbiden = #{record.uploadForbiden,jdbcType=TINYINT},
      source_url = #{record.sourceUrl,jdbcType=VARCHAR},
      comments = #{record.comments,jdbcType=VARCHAR},
      cost = #{record.cost,jdbcType=REAL},
      shipping_cost = #{record.shippingCost,jdbcType=REAL},
      custom_code = #{record.customCode,jdbcType=VARCHAR},
      eng_desc = #{record.engDesc,jdbcType=VARCHAR},
      declare_price = #{record.declarePrice,jdbcType=VARCHAR},
      ch_desc = #{record.chDesc,jdbcType=VARCHAR},
      inner_sku = #{record.innerSku,jdbcType=VARCHAR},
      suit_for_group = #{record.suitForGroup,jdbcType=TINYINT},
      product_material = #{record.productMaterial,jdbcType=VARCHAR},
      packet_material = #{record.packetMaterial,jdbcType=VARCHAR},
      metal_type = #{record.metalType,jdbcType=VARCHAR},
      jewel_type = #{record.jewelType,jdbcType=VARCHAR},
      package_gross_weight = #{record.packageGrossWeight,jdbcType=VARCHAR},
      has_battery = #{record.hasBattery,jdbcType=TINYINT},
      package_long = #{record.packageLong,jdbcType=REAL},
      package_width = #{record.packageWidth,jdbcType=REAL},
      package_hight = #{record.packageHight,jdbcType=REAL},
      in_store = #{record.inStore,jdbcType=BIGINT},
      count_per_package = #{record.countPerPackage,jdbcType=BIGINT},
      product_type_id = #{record.productTypeId,jdbcType=INTEGER},
      englishProductTile = #{record.englishproducttile,jdbcType=LONGVARBINARY},
      englishProductKeyWords = #{record.englishproductkeywords,jdbcType=LONGVARBINARY},
      englishProductKeyDesc = #{record.englishproductkeydesc,jdbcType=LONGVARBINARY},
      englishProductDesc = #{record.englishproductdesc,jdbcType=LONGVARBINARY},
      frenchProductTile = #{record.frenchproducttile,jdbcType=LONGVARBINARY},
      frenchProductKeyWords = #{record.frenchproductkeywords,jdbcType=LONGVARBINARY},
      frenchProductKeyDesc = #{record.frenchproductkeydesc,jdbcType=LONGVARBINARY},
      frenchProductDesc = #{record.frenchproductdesc,jdbcType=LONGVARBINARY},
      germanProductTile = #{record.germanproducttile,jdbcType=LONGVARBINARY},
      germanProductKeyWords = #{record.germanproductkeywords,jdbcType=LONGVARBINARY},
      germanProductKeyDesc = #{record.germanproductkeydesc,jdbcType=LONGVARBINARY},
      germanProductDesc = #{record.germanproductdesc,jdbcType=LONGVARBINARY},
      italyProductTile = #{record.italyproducttile,jdbcType=LONGVARBINARY},
      italyProductKeyWords = #{record.italyproductkeywords,jdbcType=LONGVARBINARY},
      italyProductKeyDesc = #{record.italyproductkeydesc,jdbcType=LONGVARBINARY},
      italyProductDesc = #{record.italyproductdesc,jdbcType=LONGVARBINARY},
      spanishProductTile = #{record.spanishproducttile,jdbcType=LONGVARBINARY},
      spanishProductKeyWords = #{record.spanishproductkeywords,jdbcType=LONGVARBINARY},
      spanishProductKeyDesc = #{record.spanishproductkeydesc,jdbcType=LONGVARBINARY},
      spanishProductDesc = #{record.spanishproductdesc,jdbcType=LONGVARBINARY},
      japaneseProductTile = #{record.japaneseproducttile,jdbcType=LONGVARBINARY},
      japaneseProductKeyWords = #{record.japaneseproductkeywords,jdbcType=LONGVARBINARY},
      japaneseProductKeyDesc = #{record.japaneseproductkeydesc,jdbcType=LONGVARBINARY},
      japaneseProductDesc = #{record.japaneseproductdesc,jdbcType=LONGVARBINARY},
      russianProductTile = #{record.russianproducttile,jdbcType=LONGVARBINARY},
      russianProductKeyWords = #{record.russianproductkeywords,jdbcType=LONGVARBINARY},
      russianProductKeyDesc = #{record.russianproductkeydesc,jdbcType=LONGVARBINARY},
      russianProductDesc = #{record.russianproductdesc,jdbcType=LONGVARBINARY},
      chineseProductTile = #{record.chineseproducttile,jdbcType=LONGVARBINARY},
      chineseProductKeyWords = #{record.chineseproductkeywords,jdbcType=LONGVARBINARY},
      chineseProductKeyDesc = #{record.chineseproductkeydesc,jdbcType=LONGVARBINARY},
      chineseProductDesc = #{record.chineseproductdesc,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 24 21:47:09 CST 2019.
    -->
    update product
    set id = #{record.id,jdbcType=INTEGER},
      creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      audit_status = #{record.auditStatus,jdbcType=TINYINT},
      onsale = #{record.onsale,jdbcType=TINYINT},
      level = #{record.level,jdbcType=TINYINT},
      user_id = #{record.userId,jdbcType=INTEGER},
      brand = #{record.brand,jdbcType=VARCHAR},
      factory_name = #{record.factoryName,jdbcType=VARCHAR},
      source_area = #{record.sourceArea,jdbcType=VARCHAR},
      factory_number = #{record.factoryNumber,jdbcType=VARCHAR},
      factory_catalog = #{record.factoryCatalog,jdbcType=VARCHAR},
      upload_forbiden = #{record.uploadForbiden,jdbcType=TINYINT},
      source_url = #{record.sourceUrl,jdbcType=VARCHAR},
      comments = #{record.comments,jdbcType=VARCHAR},
      cost = #{record.cost,jdbcType=REAL},
      shipping_cost = #{record.shippingCost,jdbcType=REAL},
      custom_code = #{record.customCode,jdbcType=VARCHAR},
      eng_desc = #{record.engDesc,jdbcType=VARCHAR},
      declare_price = #{record.declarePrice,jdbcType=VARCHAR},
      ch_desc = #{record.chDesc,jdbcType=VARCHAR},
      inner_sku = #{record.innerSku,jdbcType=VARCHAR},
      suit_for_group = #{record.suitForGroup,jdbcType=TINYINT},
      product_material = #{record.productMaterial,jdbcType=VARCHAR},
      packet_material = #{record.packetMaterial,jdbcType=VARCHAR},
      metal_type = #{record.metalType,jdbcType=VARCHAR},
      jewel_type = #{record.jewelType,jdbcType=VARCHAR},
      package_gross_weight = #{record.packageGrossWeight,jdbcType=VARCHAR},
      has_battery = #{record.hasBattery,jdbcType=TINYINT},
      package_long = #{record.packageLong,jdbcType=REAL},
      package_width = #{record.packageWidth,jdbcType=REAL},
      package_hight = #{record.packageHight,jdbcType=REAL},
      in_store = #{record.inStore,jdbcType=BIGINT},
      count_per_package = #{record.countPerPackage,jdbcType=BIGINT},
      product_type_id = #{record.productTypeId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.management.backend.api.mybatis.model.ProductWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 24 21:47:09 CST 2019.
    -->
    update product
    <set>
      <if test="creatTime != null">
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditStatus != null">
        audit_status = #{auditStatus,jdbcType=TINYINT},
      </if>
      <if test="onsale != null">
        onsale = #{onsale,jdbcType=TINYINT},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="brand != null">
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="factoryName != null">
        factory_name = #{factoryName,jdbcType=VARCHAR},
      </if>
      <if test="sourceArea != null">
        source_area = #{sourceArea,jdbcType=VARCHAR},
      </if>
      <if test="factoryNumber != null">
        factory_number = #{factoryNumber,jdbcType=VARCHAR},
      </if>
      <if test="factoryCatalog != null">
        factory_catalog = #{factoryCatalog,jdbcType=VARCHAR},
      </if>
      <if test="uploadForbiden != null">
        upload_forbiden = #{uploadForbiden,jdbcType=TINYINT},
      </if>
      <if test="sourceUrl != null">
        source_url = #{sourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="comments != null">
        comments = #{comments,jdbcType=VARCHAR},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=REAL},
      </if>
      <if test="shippingCost != null">
        shipping_cost = #{shippingCost,jdbcType=REAL},
      </if>
      <if test="customCode != null">
        custom_code = #{customCode,jdbcType=VARCHAR},
      </if>
      <if test="engDesc != null">
        eng_desc = #{engDesc,jdbcType=VARCHAR},
      </if>
      <if test="declarePrice != null">
        declare_price = #{declarePrice,jdbcType=VARCHAR},
      </if>
      <if test="chDesc != null">
        ch_desc = #{chDesc,jdbcType=VARCHAR},
      </if>
      <if test="innerSku != null">
        inner_sku = #{innerSku,jdbcType=VARCHAR},
      </if>
      <if test="suitForGroup != null">
        suit_for_group = #{suitForGroup,jdbcType=TINYINT},
      </if>
      <if test="productMaterial != null">
        product_material = #{productMaterial,jdbcType=VARCHAR},
      </if>
      <if test="packetMaterial != null">
        packet_material = #{packetMaterial,jdbcType=VARCHAR},
      </if>
      <if test="metalType != null">
        metal_type = #{metalType,jdbcType=VARCHAR},
      </if>
      <if test="jewelType != null">
        jewel_type = #{jewelType,jdbcType=VARCHAR},
      </if>
      <if test="packageGrossWeight != null">
        package_gross_weight = #{packageGrossWeight,jdbcType=VARCHAR},
      </if>
      <if test="hasBattery != null">
        has_battery = #{hasBattery,jdbcType=TINYINT},
      </if>
      <if test="packageLong != null">
        package_long = #{packageLong,jdbcType=REAL},
      </if>
      <if test="packageWidth != null">
        package_width = #{packageWidth,jdbcType=REAL},
      </if>
      <if test="packageHight != null">
        package_hight = #{packageHight,jdbcType=REAL},
      </if>
      <if test="inStore != null">
        in_store = #{inStore,jdbcType=BIGINT},
      </if>
      <if test="countPerPackage != null">
        count_per_package = #{countPerPackage,jdbcType=BIGINT},
      </if>
      <if test="productTypeId != null">
        product_type_id = #{productTypeId,jdbcType=INTEGER},
      </if>
      <if test="englishproducttile != null">
        englishProductTile = #{englishproducttile,jdbcType=LONGVARBINARY},
      </if>
      <if test="englishproductkeywords != null">
        englishProductKeyWords = #{englishproductkeywords,jdbcType=LONGVARBINARY},
      </if>
      <if test="englishproductkeydesc != null">
        englishProductKeyDesc = #{englishproductkeydesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="englishproductdesc != null">
        englishProductDesc = #{englishproductdesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="frenchproducttile != null">
        frenchProductTile = #{frenchproducttile,jdbcType=LONGVARBINARY},
      </if>
      <if test="frenchproductkeywords != null">
        frenchProductKeyWords = #{frenchproductkeywords,jdbcType=LONGVARBINARY},
      </if>
      <if test="frenchproductkeydesc != null">
        frenchProductKeyDesc = #{frenchproductkeydesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="frenchproductdesc != null">
        frenchProductDesc = #{frenchproductdesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="germanproducttile != null">
        germanProductTile = #{germanproducttile,jdbcType=LONGVARBINARY},
      </if>
      <if test="germanproductkeywords != null">
        germanProductKeyWords = #{germanproductkeywords,jdbcType=LONGVARBINARY},
      </if>
      <if test="germanproductkeydesc != null">
        germanProductKeyDesc = #{germanproductkeydesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="germanproductdesc != null">
        germanProductDesc = #{germanproductdesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="italyproducttile != null">
        italyProductTile = #{italyproducttile,jdbcType=LONGVARBINARY},
      </if>
      <if test="italyproductkeywords != null">
        italyProductKeyWords = #{italyproductkeywords,jdbcType=LONGVARBINARY},
      </if>
      <if test="italyproductkeydesc != null">
        italyProductKeyDesc = #{italyproductkeydesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="italyproductdesc != null">
        italyProductDesc = #{italyproductdesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="spanishproducttile != null">
        spanishProductTile = #{spanishproducttile,jdbcType=LONGVARBINARY},
      </if>
      <if test="spanishproductkeywords != null">
        spanishProductKeyWords = #{spanishproductkeywords,jdbcType=LONGVARBINARY},
      </if>
      <if test="spanishproductkeydesc != null">
        spanishProductKeyDesc = #{spanishproductkeydesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="spanishproductdesc != null">
        spanishProductDesc = #{spanishproductdesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="japaneseproducttile != null">
        japaneseProductTile = #{japaneseproducttile,jdbcType=LONGVARBINARY},
      </if>
      <if test="japaneseproductkeywords != null">
        japaneseProductKeyWords = #{japaneseproductkeywords,jdbcType=LONGVARBINARY},
      </if>
      <if test="japaneseproductkeydesc != null">
        japaneseProductKeyDesc = #{japaneseproductkeydesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="japaneseproductdesc != null">
        japaneseProductDesc = #{japaneseproductdesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="russianproducttile != null">
        russianProductTile = #{russianproducttile,jdbcType=LONGVARBINARY},
      </if>
      <if test="russianproductkeywords != null">
        russianProductKeyWords = #{russianproductkeywords,jdbcType=LONGVARBINARY},
      </if>
      <if test="russianproductkeydesc != null">
        russianProductKeyDesc = #{russianproductkeydesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="russianproductdesc != null">
        russianProductDesc = #{russianproductdesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="chineseproducttile != null">
        chineseProductTile = #{chineseproducttile,jdbcType=LONGVARBINARY},
      </if>
      <if test="chineseproductkeywords != null">
        chineseProductKeyWords = #{chineseproductkeywords,jdbcType=LONGVARBINARY},
      </if>
      <if test="chineseproductkeydesc != null">
        chineseProductKeyDesc = #{chineseproductkeydesc,jdbcType=LONGVARBINARY},
      </if>
      <if test="chineseproductdesc != null">
        chineseProductDesc = #{chineseproductdesc,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.management.backend.api.mybatis.model.ProductWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 24 21:47:09 CST 2019.
    -->
    update product
    set creat_time = #{creatTime,jdbcType=TIMESTAMP},
      audit_status = #{auditStatus,jdbcType=TINYINT},
      onsale = #{onsale,jdbcType=TINYINT},
      level = #{level,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=INTEGER},
      brand = #{brand,jdbcType=VARCHAR},
      factory_name = #{factoryName,jdbcType=VARCHAR},
      source_area = #{sourceArea,jdbcType=VARCHAR},
      factory_number = #{factoryNumber,jdbcType=VARCHAR},
      factory_catalog = #{factoryCatalog,jdbcType=VARCHAR},
      upload_forbiden = #{uploadForbiden,jdbcType=TINYINT},
      source_url = #{sourceUrl,jdbcType=VARCHAR},
      comments = #{comments,jdbcType=VARCHAR},
      cost = #{cost,jdbcType=REAL},
      shipping_cost = #{shippingCost,jdbcType=REAL},
      custom_code = #{customCode,jdbcType=VARCHAR},
      eng_desc = #{engDesc,jdbcType=VARCHAR},
      declare_price = #{declarePrice,jdbcType=VARCHAR},
      ch_desc = #{chDesc,jdbcType=VARCHAR},
      inner_sku = #{innerSku,jdbcType=VARCHAR},
      suit_for_group = #{suitForGroup,jdbcType=TINYINT},
      product_material = #{productMaterial,jdbcType=VARCHAR},
      packet_material = #{packetMaterial,jdbcType=VARCHAR},
      metal_type = #{metalType,jdbcType=VARCHAR},
      jewel_type = #{jewelType,jdbcType=VARCHAR},
      package_gross_weight = #{packageGrossWeight,jdbcType=VARCHAR},
      has_battery = #{hasBattery,jdbcType=TINYINT},
      package_long = #{packageLong,jdbcType=REAL},
      package_width = #{packageWidth,jdbcType=REAL},
      package_hight = #{packageHight,jdbcType=REAL},
      in_store = #{inStore,jdbcType=BIGINT},
      count_per_package = #{countPerPackage,jdbcType=BIGINT},
      product_type_id = #{productTypeId,jdbcType=INTEGER},
      englishProductTile = #{englishproducttile,jdbcType=LONGVARBINARY},
      englishProductKeyWords = #{englishproductkeywords,jdbcType=LONGVARBINARY},
      englishProductKeyDesc = #{englishproductkeydesc,jdbcType=LONGVARBINARY},
      englishProductDesc = #{englishproductdesc,jdbcType=LONGVARBINARY},
      frenchProductTile = #{frenchproducttile,jdbcType=LONGVARBINARY},
      frenchProductKeyWords = #{frenchproductkeywords,jdbcType=LONGVARBINARY},
      frenchProductKeyDesc = #{frenchproductkeydesc,jdbcType=LONGVARBINARY},
      frenchProductDesc = #{frenchproductdesc,jdbcType=LONGVARBINARY},
      germanProductTile = #{germanproducttile,jdbcType=LONGVARBINARY},
      germanProductKeyWords = #{germanproductkeywords,jdbcType=LONGVARBINARY},
      germanProductKeyDesc = #{germanproductkeydesc,jdbcType=LONGVARBINARY},
      germanProductDesc = #{germanproductdesc,jdbcType=LONGVARBINARY},
      italyProductTile = #{italyproducttile,jdbcType=LONGVARBINARY},
      italyProductKeyWords = #{italyproductkeywords,jdbcType=LONGVARBINARY},
      italyProductKeyDesc = #{italyproductkeydesc,jdbcType=LONGVARBINARY},
      italyProductDesc = #{italyproductdesc,jdbcType=LONGVARBINARY},
      spanishProductTile = #{spanishproducttile,jdbcType=LONGVARBINARY},
      spanishProductKeyWords = #{spanishproductkeywords,jdbcType=LONGVARBINARY},
      spanishProductKeyDesc = #{spanishproductkeydesc,jdbcType=LONGVARBINARY},
      spanishProductDesc = #{spanishproductdesc,jdbcType=LONGVARBINARY},
      japaneseProductTile = #{japaneseproducttile,jdbcType=LONGVARBINARY},
      japaneseProductKeyWords = #{japaneseproductkeywords,jdbcType=LONGVARBINARY},
      japaneseProductKeyDesc = #{japaneseproductkeydesc,jdbcType=LONGVARBINARY},
      japaneseProductDesc = #{japaneseproductdesc,jdbcType=LONGVARBINARY},
      russianProductTile = #{russianproducttile,jdbcType=LONGVARBINARY},
      russianProductKeyWords = #{russianproductkeywords,jdbcType=LONGVARBINARY},
      russianProductKeyDesc = #{russianproductkeydesc,jdbcType=LONGVARBINARY},
      russianProductDesc = #{russianproductdesc,jdbcType=LONGVARBINARY},
      chineseProductTile = #{chineseproducttile,jdbcType=LONGVARBINARY},
      chineseProductKeyWords = #{chineseproductkeywords,jdbcType=LONGVARBINARY},
      chineseProductKeyDesc = #{chineseproductkeydesc,jdbcType=LONGVARBINARY},
      chineseProductDesc = #{chineseproductdesc,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.management.backend.api.mybatis.model.Product">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 24 21:47:09 CST 2019.
    -->
    update product
    set creat_time = #{creatTime,jdbcType=TIMESTAMP},
      audit_status = #{auditStatus,jdbcType=TINYINT},
      onsale = #{onsale,jdbcType=TINYINT},
      level = #{level,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=INTEGER},
      brand = #{brand,jdbcType=VARCHAR},
      factory_name = #{factoryName,jdbcType=VARCHAR},
      source_area = #{sourceArea,jdbcType=VARCHAR},
      factory_number = #{factoryNumber,jdbcType=VARCHAR},
      factory_catalog = #{factoryCatalog,jdbcType=VARCHAR},
      upload_forbiden = #{uploadForbiden,jdbcType=TINYINT},
      source_url = #{sourceUrl,jdbcType=VARCHAR},
      comments = #{comments,jdbcType=VARCHAR},
      cost = #{cost,jdbcType=REAL},
      shipping_cost = #{shippingCost,jdbcType=REAL},
      custom_code = #{customCode,jdbcType=VARCHAR},
      eng_desc = #{engDesc,jdbcType=VARCHAR},
      declare_price = #{declarePrice,jdbcType=VARCHAR},
      ch_desc = #{chDesc,jdbcType=VARCHAR},
      inner_sku = #{innerSku,jdbcType=VARCHAR},
      suit_for_group = #{suitForGroup,jdbcType=TINYINT},
      product_material = #{productMaterial,jdbcType=VARCHAR},
      packet_material = #{packetMaterial,jdbcType=VARCHAR},
      metal_type = #{metalType,jdbcType=VARCHAR},
      jewel_type = #{jewelType,jdbcType=VARCHAR},
      package_gross_weight = #{packageGrossWeight,jdbcType=VARCHAR},
      has_battery = #{hasBattery,jdbcType=TINYINT},
      package_long = #{packageLong,jdbcType=REAL},
      package_width = #{packageWidth,jdbcType=REAL},
      package_hight = #{packageHight,jdbcType=REAL},
      in_store = #{inStore,jdbcType=BIGINT},
      count_per_package = #{countPerPackage,jdbcType=BIGINT},
      product_type_id = #{productTypeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.management.backend.api.mybatis.model.ProductWithBLOBs">
    &lt;!&ndash;
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 23 11:01:33 CST 2019.
    &ndash;&gt;

  </resultMap>-->



</mapper>